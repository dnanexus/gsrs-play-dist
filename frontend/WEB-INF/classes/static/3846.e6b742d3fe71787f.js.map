{"version":3,"mappings":"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","names":["i0","ctx_r1","CodeFormComponent","cvService","utilsService","f","this","EventEmitter","getVocabularies","privateCode","access","set","code","getDomainVocabulary","subscribe","t","codeSystemList","response","CODE_SYSTEM","list","codeSystemDictionary","dictionary","setCodeSystemType","codeTypeList","CODE_TYPE","$$deletedCode","newUUID","codeSystem","type","deleteTimer","setTimeout","codeDeleted","emit","value","url","replace","trim","clearTimeout","event","codeSystemType","systemCategory","selectors","ctx","ctx_r4","ctx_r10","ctx_r12","SubstanceFormSimplifiedCodesCardComponent","substanceFormCodesService","substanceFormService","scrollToService","gaService","d","analyticsEventCategory","menuLabelUpdate","expanded","definitionSubscription","definition","level","definitionType","i","hiddenStateUpdate","canAddItemUpdate","subscriptions","push","codesSubscription","substanceCodes","codes","filtered","searchSubscription","searchControl","valueChanges","filterList","console","log","error","page","pageChange","componentDestroyed","forEach","subscription","unsubscribe","addCode","addSubstanceCode","scrollToElement","deleteSubstanceCode","SubstanceCardBaseFilteredList","SubstanceFormSimplifiedCodesModule","u","CommonModule","DynamicComponentLoaderModule","SubstanceFormModule","MatDividerModule","MatIconModule","MatButtonModule","ScrollToModule","MatFormFieldModule","ReactiveFormsModule","FormsModule","MatPaginatorModule","MatInputModule","MatTooltipModule"],"sources":["./src/app/core/substance-form/simplified-codes/code-form.component.html","./src/app/core/substance-form/simplified-codes/code-form.component.ts","./src/app/core/substance-form/simplified-codes/substance-form-simplified-codes-card.component.html","./src/app/core/substance-form/simplified-codes/substance-form-simplified-codes-card.component.ts","./src/app/core/substance-form/simplified-codes/substance-form-simplified-codes.module.ts"],"sourcesContent":["<div class=\"code-form-container\">\n  <div *ngIf=\"code.$$deletedCode\" class=\"notification-backdrop\">\n    Deleted&nbsp;\n    <button mat-icon-button matTooltip=\"Undo\" (click)=\"undoDelete()\">\n      <mat-icon svgIcon=\"undo\"></mat-icon>\n    </button>\n  </div>\n\n  <div class=\"form-row\">\n    <div class=\"delete-container\">\n      <button mat-icon-button matTooltip=\"Delete code\" (click)=\"deleteCode()\">\n        <mat-icon svgIcon=\"delete_forever\"></mat-icon>\n      </button>\n    </div>\n\n    <app-cv-input required='true' class=\"code-system\" key='Code System' title=\"Code System\" name=\"code\"\n                  [model]=\"code.codeSystem\" (valueChange)=\"setCodeSystemType($event)\">\n    </app-cv-input>\n\n    <mat-form-field class=\"code\">\n      <input matInput placeholder=\"Code\" [(ngModel)]=\"code.code\" required name=\"code\"/>\n    </mat-form-field>\n\n    <div>\n      <app-access-manager (accessOut)=\"updateAccess($event)\" [access]=\"code.access\">\n      </app-access-manager>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { SubstanceCode } from '@gsrs-core/substance';\nimport { ControlledVocabularyService } from '@gsrs-core/controlled-vocabulary';\nimport { VocabularyTerm } from '@gsrs-core/controlled-vocabulary';\nimport { UtilsService } from '@gsrs-core/utils';\n\n@Component({\n  selector: 'app-code-form',\n  templateUrl: './code-form.component.html',\n  styleUrls: ['./code-form.component.scss']\n})\nexport class CodeFormComponent implements OnInit {\n  private privateCode: SubstanceCode;\n  @Output() codeDeleted = new EventEmitter<SubstanceCode>();\n  codeSystemList: Array<VocabularyTerm> = [];\n  codeSystemDictionary: { [termValue: string]: VocabularyTerm };\n  codeSystemType: string;\n  codeTypeList: Array<VocabularyTerm> = [];\n  deleteTimer: any;\n\n  constructor(\n    private cvService: ControlledVocabularyService,\n    private utilsService: UtilsService\n  ) { }\n\n  ngOnInit() {\n    this.getVocabularies();\n\n    // Protected access by default.\n    this.privateCode.access = [\"protected\"]\n  }\n\n  @Input()\n  set code(code: SubstanceCode) {\n    this.privateCode = code;\n  }\n\n  get code(): SubstanceCode {\n    return this.privateCode;\n  }\n\n  getVocabularies(): void {\n    this.cvService.getDomainVocabulary('CODE_SYSTEM', 'CODE_TYPE').subscribe(response => {\n      this.codeSystemList = response['CODE_SYSTEM'].list;\n      this.codeSystemDictionary = response['CODE_SYSTEM'].dictionary;\n      this.setCodeSystemType();\n      this.codeTypeList = response['CODE_TYPE'].list;\n    });\n  }\n\n  deleteCode(): void {\n    this.privateCode.$$deletedCode = this.utilsService.newUUID();\n    if (!this.privateCode.codeSystem\n      && !this.privateCode.type\n      && !this.privateCode.code\n    ) {\n      this.deleteTimer = setTimeout(() => {\n        this.codeDeleted.emit(this.privateCode);\n      }, 2000);\n    }\n  }\n\n  trimWhitespace(value) {\n    this.code.url = value;\n    this.privateCode.url = this.privateCode.url.replace(/[\\u200A|\\u2009|\\u2006|\\u2008]/g, ' ').trim();\n    this.privateCode.url = value.trim().trim().trim();\n  }\n\n  undoDelete(): void {\n    clearTimeout(this.deleteTimer);\n    delete this.privateCode.$$deletedCode;\n  }\n\n  setCodeSystemType(event?: any): void {\n    if (event) {\n      this.code.codeSystem = event;\n    }\n    if (this.privateCode != null && this.codeSystemDictionary != null) {\n      this.codeSystemType = this.codeSystemDictionary[this.privateCode.codeSystem]\n        && this.codeSystemDictionary[this.privateCode.codeSystem].systemCategory || '';\n    }\n  }\n\n  updateAccess(access: Array<string>): void {\n    this.code.access = access;\n  }\n\n}\n","<div class=\"flex-row\">\n  <mat-form-field [floatLabel]=\"'never'\" class=\"search\" *ngIf=\"codes && codes.length > pageSize\">\n    <input matInput placeholder=\"Search\" [formControl]=\"searchControl\">\n  </mat-form-field>\n  <span class=\"middle-fill\"></span>\n</div>\n\n<mat-paginator *ngIf=\"codes && codes.length > 5\" [length]=\"filtered && filtered.length || 0\" [pageIndex]=\"page\" [pageSize]=\"10\" showFirstLastButtons=\"true\"\n    (page)=\"pageChange($event, analyticsEventCategory)\" [pageSizeOptions]=\"[5, 10, 25, 100]\">\n  </mat-paginator>\n<div class=\"code\" *ngFor=\"let code of paged; last as isLast; index as index\" appScrollToTarget\n  [id]=\"'substance-code-' + index\">\n  <app-code-form [code]=\"code\" (codeDeleted)=\"deleteCode($event)\" [show] = \"expanded\"></app-code-form>\n  <mat-divider class=\"form-divider\" [inset]=\"true\" *ngIf=\"!isLast\"></mat-divider>\n</div>\n<mat-paginator *ngIf=\"codes && codes.length > 5\" [length]=\"filtered && filtered.length || 0\" [pageIndex]=\"page\" [pageSize]=\"10\" showFirstLastButtons=\"true\"\n  (page)=\"pageChange($event, analyticsEventCategory)\" [pageSizeOptions]=\"[5, 10, 25, 100]\">\n</mat-paginator>\n","import { Component, OnInit, AfterViewInit, OnDestroy } from '@angular/core';\nimport { SubstanceCardBaseFilteredList, SubstanceCardBaseList } from '../base-classes/substance-form-base-filtered-list';\nimport { SubstanceFormService } from '../substance-form.service';\nimport { SubstanceCode } from '@gsrs-core/substance/substance.model';\nimport { ScrollToService } from '../../scroll-to/scroll-to.service';\nimport { GoogleAnalyticsService } from '@gsrs-core/google-analytics';\nimport { Subscription } from 'rxjs';\nimport { SubstanceFormCodesService } from '../codes/substance-form-codes.service';\n\n@Component({\n  selector: 'app-substance-form-codes-card',\n  templateUrl: './substance-form-simplified-codes-card.component.html',\n  styleUrls: ['./substance-form-simplified-codes-card.component.scss']\n})\nexport class SubstanceFormSimplifiedCodesCardComponent extends SubstanceCardBaseFilteredList<SubstanceCode>\n  implements OnInit, AfterViewInit, OnDestroy, SubstanceCardBaseList {\n\n  codes: Array<SubstanceCode>;\n  private subscriptions: Array<Subscription> = [];\n  pageSize = 10;\n  expanded = true;\n  validate = false;\n\n  constructor(\n    private substanceFormCodesService: SubstanceFormCodesService,\n    private substanceFormService: SubstanceFormService,\n    private scrollToService: ScrollToService,\n    public gaService: GoogleAnalyticsService\n  ) {\n    super(gaService);\n    this.analyticsEventCategory = 'substance form codes';\n  }\n\n  ngOnInit() {\n    this.menuLabelUpdate.emit('Codes');\n  }\n\n  collapse() {\n    this.expanded = !this.expanded;\n  }\n\n  ngAfterViewInit() {\n    const definitionSubscription = this.substanceFormService.definition.subscribe( level => {\n      if (level.definitionType && level.definitionType === 'ALTERNATIVE') {\n      //  this.canAddItemUpdate.emit(false);\n        this.hiddenStateUpdate.emit(true);\n      } else {\n        this.canAddItemUpdate.emit(true);\n        this.hiddenStateUpdate.emit(false);\n      }\n    });\n    this.subscriptions.push(definitionSubscription);\n    const codesSubscription = this.substanceFormCodesService.substanceCodes.subscribe(codes => {\n      this.codes = codes;\n      this.filtered = codes;\n      const searchSubscription = this.searchControl.valueChanges.subscribe(value => {\n        this.filterList(value, this.codes, this.analyticsEventCategory);\n      }, error => {\n        console.log(error);\n      });\n      this.subscriptions.push(searchSubscription);\n      this.page = 0;\n      this.pageChange();\n    });\n    this.subscriptions.push(codesSubscription);\n  }\n\n  ngOnDestroy() {\n    this.componentDestroyed.emit();\n    this.subscriptions.forEach(subscription => {\n      subscription.unsubscribe();\n    });\n  }\n\n  addItem(): void {\n    this.addCode();\n  }\n\n  addCode(): void {\n    this.substanceFormCodesService.addSubstanceCode();\n    setTimeout(() => {\n      this.scrollToService.scrollToElement(`substance-code-0`, 'center');\n    });\n  }\n\n  deleteCode(code: SubstanceCode): void {\n    this.substanceFormCodesService.deleteSubstanceCode(code);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SubstanceFormSimplifiedCodesCardComponent } from './substance-form-simplified-codes-card.component';\nimport { DynamicComponentLoaderModule } from '@gsrs-core/dynamic-component-loader';\nimport { SubstanceFormModule } from '../substance-form.module';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ScrollToModule } from '@gsrs-core/scroll-to';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatInputModule } from '@angular/material/input';\nimport { CodeFormComponent } from './code-form.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DynamicComponentLoaderModule.forChild(SubstanceFormSimplifiedCodesCardComponent),\n    SubstanceFormModule,\n    MatDividerModule,\n    MatIconModule,\n    MatButtonModule,\n    ScrollToModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatPaginatorModule,\n    MatInputModule,\n    MatTooltipModule\n  ],\n  declarations: [\n    SubstanceFormSimplifiedCodesCardComponent,\n    CodeFormComponent\n  ]\n})\nexport class SubstanceFormSimplifiedCodesModule { }\n"],"sourceRoot":"webpack:///","file":"3846.e6b742d3fe71787f.js"}